name: Package

on:
  push:
  pull_request:

jobs:
  bundle:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15, windows-2019]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: "3.x"
    - name: Install APT dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install libsdl2-dev
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
    - name: pip cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Pip packages
      run: |
        python -m pip install -U pip wheel
        pip install --requirement requirements.txt pyinstaller
    - name: Run PyInstaller
      run: |
        pyinstaller main.spec
    - name: List files
      if: runner.os != 'Windows'
      run: |
        find dist
    - name: Tar files
      if: runner.os != 'Windows'
      run: |
        tar --format=ustar -czvf ${{matrix.os}}.tar.gz dist/main
    - name: Archive files
      if: runner.os == 'Windows'
      run: |
        Compress-Archive dist/main ${{matrix.os}}.zip
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: ${{matrix.os}}.*
